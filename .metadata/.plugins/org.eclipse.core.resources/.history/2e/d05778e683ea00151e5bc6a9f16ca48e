package gui;

import java.awt.Dimension;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;

import javax.swing.JFrame;
import javax.swing.JPanel;

import comparc.Cycle;
import comparc.Instruction;
import comparc.Memory;
import comparc.Register;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JLabel;
import javax.swing.JButton;
import java.awt.BorderLayout;
import javax.swing.SwingConstants;

public class RunGUI {
	private JFrame jFrame = new JFrame("Run");
	private JPanel mainPanel = new JPanel();
	private JTable mapTable = new JTable();
	private JTable cycleTable = new JTable();
	private JScrollPane mapScroll = new JScrollPane();
	private JScrollPane cycleScroll = new JScrollPane();
	private JLabel lblPipelineMap = new JLabel("Pipeline Map");
	private JLabel lblCycleVariables = new JLabel("Cycle Variables");
	private JLabel lblCycleNumber = new JLabel("Cycle Number");
	private JButton btnNextCycle = new JButton("Next Cycle");
	private JButton btnPrevCycle = new JButton("Previous Cycle");
	private JButton btnFullExe = new JButton("Full Execution");
	private JButton btnBack = new JButton("Back");
    private ArrayList<Cycle> cycles = new ArrayList<Cycle>();
    private int PC;
    private int clockCycle;
	
	public RunGUI(ArrayList<Instruction> ins, ArrayList<Register> reg,  ArrayList<Memory> mem ){
		PC = 0;
		
		jFrame.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
        jFrame.getContentPane().add(mainPanel, BorderLayout.CENTER);
		
		mainPanel.setPreferredSize (new Dimension(750, 500));
        mainPanel.setLayout (null);
        
        cycleScroll.setBounds(378, 39, 358, 450);
        mainPanel.add(cycleScroll);
        cycleScroll.add(cycleTable);
		
        mapScroll.setBounds(10, 39, 358, 350);
        mainPanel.add(mapScroll);
        mapScroll.add(mapTable);
        
        lblPipelineMap.setBounds(160, 11, 79, 17);
        mainPanel.add(lblPipelineMap);
        
        lblCycleVariables.setBounds(519, 14, 90, 14);
        mainPanel.add(lblCycleVariables);
        lblCycleNumber.setHorizontalAlignment(SwingConstants.CENTER);
        
        lblCycleNumber.setBounds(154, 400, 72, 39);
        mainPanel.add(lblCycleNumber);
        
        btnNextCycle.setBounds(265, 400, 103, 39);
        mainPanel.add(btnNextCycle);
        
        btnPrevCycle.setBounds(10, 400, 103, 39);
        mainPanel.add(btnPrevCycle);
        
        btnFullExe.setBounds(119, 450, 249, 39);
        mainPanel.add(btnFullExe);
        
        btnBack.setBounds(10, 450, 103, 39);
        mainPanel.add(btnBack);
        
        jFrame.pack();
        jFrame.setVisible (true);
        jFrame.setLocationRelativeTo(null);
        
        boolean x = true;
        
        while(x){
        	int i = 0;
        	for(i = 0; i < ins.size();i++)
        		if(PC == ins.get(i).getPC())
        			break;
        	
        	switch(ins.get(i).getIns()){
        		case "DADDU":break;
        		case "DMULU":break;
        		case "DMUHU":break;
        		case "SLT":break;
        		case "SELEQZ":break;
        		case "BEQC":break;
        		case "LD":break;
        		case "SD":break;
        		case "DADDUI":break;
        		case "BC":break;
        	}
        }
        
        btnNextCycle.addActionListener(new ActionListener(){
            @Override
            public void actionPerformed(ActionEvent e){
            	
            }
        });
        
        btnPrevCycle.addActionListener(new ActionListener(){
            @Override
            public void actionPerformed(ActionEvent e){
            	
            }
        });
        
        btnFullExe.addActionListener(new ActionListener(){
            @Override
            public void actionPerformed(ActionEvent e){
            	
            }
        });
        
        btnBack.addActionListener(new ActionListener(){
            @Override
            public void actionPerformed(ActionEvent e){
            	jFrame.dispose();
            	new MainGUI(ins, reg, mem);
            }
        });
        
	}
}
